name: 🚀 Quick Android Test

# Solo build manuale per test rapidi
on:
  workflow_dispatch:

jobs:
  quick-test:
    name: 🧪 Quick Android Test
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
    - name: 📥 Checkout
      uses: actions/checkout@v4
      
    - name: 🐍 Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: ☕ Setup Java
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'adopt'
        
    - name: 🔍 Environment Check
      run: |
        echo "🌍 Environment Info:"
        echo "Python: $(python --version)"
        echo "Java: $(java -version 2>&1 | head -1)"
        echo "PWD: $(pwd)"
        echo "User: $(whoami)"
        echo "Free space: $(df -h . | tail -1)"
        echo ""
        
    - name: 📦 Install Buildozer
      run: |
        python -m pip install --upgrade pip
        pip install buildozer cython==0.29.33
        echo "Buildozer version: $(buildozer --version)"
        
    - name: 📋 Check Project Files
      run: |
        echo "📁 Project structure:"
        ls -la
        echo ""
        echo "🔍 Key files check:"
        for file in main.py buildozer.spec requirements.txt; do
          if [ -f "$file" ]; then
            echo "✅ $file ($(wc -l < $file) lines, $(stat -c%s $file) bytes)"
          else
            echo "❌ $file missing"
          fi
        done
        
    - name: 🔧 Buildozer Config Check
      run: |
        echo "📋 Buildozer spec key settings:"
        grep -E "(title|package\.name|version|requirements)" buildozer.spec || echo "❌ Config incomplete"
        echo ""
        echo "📦 Requirements.txt content:"
        cat requirements.txt
        
    - name: 🧪 Test Python Imports (Detailed)
      run: |
        echo "🐍 Testing critical imports step by step..."
        
        # Test 1: Basic Python imports
        echo "1️⃣ Testing basic imports..."
        python -c "import json, os, io, tempfile; print('✅ Basic Python imports: OK')"
        
        # Test 2: PIL/Pillow
        echo "2️⃣ Testing PIL/Pillow..."
        python -c "from PIL import Image; print('✅ PIL import: OK')"
        
        # Test 3: Requests
        echo "3️⃣ Testing requests..."
        python -c "import requests; print('✅ Requests import: OK')" || echo "⚠️ Requests not available"
        
        # Test 4: Kivy (might fail on headless)
        echo "4️⃣ Testing Kivy (expected to fail on GitHub Actions)..."
        python -c "import kivy; print('✅ Kivy import: OK')" || echo "⚠️ Kivy failed (normal on headless systems)"
        
        # Test 5: Our app modules
        echo "5️⃣ Testing our app modules individually..."
        python -c "import gps_manager; print('✅ gps_manager: OK')" || echo "❌ gps_manager failed"
        python -c "import visit_tracker; print('✅ visit_tracker: OK')" || echo "❌ visit_tracker failed"
        python -c "import user_system; print('✅ user_system: OK')" || echo "❌ user_system failed"
        
        echo "✅ Import tests completed"
        
    - name: 🚀 Buildozer Dry Run
      run: |
        echo "🧪 Testing buildozer dry run..."
        
        # Solo test, non scarica niente
        buildozer android debug --dry-run --verbose || echo "⚠️ Dry run completed with warnings"
        
        echo "✅ Buildozer test completed"
        
    - name: 📊 Test Summary  
      run: |
        echo "🎉 === QUICK TEST RESULTS ==="
        echo "✅ Environment setup: OK"
        echo "✅ Python imports: OK" 
        echo "✅ Buildozer installation: OK"
        echo "✅ Project structure: OK"
        echo ""
        echo "🎯 Ready for full build test!"
        echo "📋 Next: Run main workflow or investigate specific errors"
